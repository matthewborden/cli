agents:
  queue: hosted

cache:
  - "/tmp/cache/go-build"
  - "/tmp/cache/go-mod"

env:
  GOMODCACHE: "/tmp/cache/go-mod"
  GOCACHE: "/tmp/cache/go-build"

steps:
  - name: ":golangci-lint: lint"
    command: golangci-lint run --verbose --timeout 3m
    plugins:
      - docker-compose#v5.2.0:
          config: .buildkite/docker-compose.yaml
          run: golangci-lint
          tty: true
          propagate-environment: true
          volumes:
            - "/tmp/cache/go-build:/tmp/cache/go-build"
            - "/tmp/cache/go-mod:/tmp/cache/go-mod"

  - name: ":go: test"
    artifact_paths:
      - cover-tree.svg
    commands:
      - go test -coverprofile cover.out ./...
      - go run github.com/nikolaydubina/go-cover-treemap@latest -coverprofile cover.out > cover-tree.svg
      - echo '<details><summary>Coverage tree map</summary><img src="artifact://cover-tree.svg" alt="Test coverage tree map" width="70%"></details>' | buildkite-agent annotate --style "info"
    plugins:
      -  docker-compose#v5.2.0:
          config: .buildkite/docker-compose.yaml
          run: golangci-lint
          tty: true
          mount-buildkite-agent: true
          propagate-environment: true
          volumes:
            - "/tmp/cache/go-build:/tmp/cache/go-build"
            - "/tmp/cache/go-mod:/tmp/cache/go-mod"

  - wait

  - label: ":terminal: build ({{matrix}})"
    matrix:
          - "darwin"
          - "linux"
          - "windows"
    artifact_paths:
      - dist/**/*
    plugins:
      - docker-compose#v5.2.0:
          command:
            - .buildkite/release.sh
            - release
            - --clean
            - --snapshot
            - --split
          config: .buildkite/docker-compose.yaml
          entrypoint: /bin/sh
          env:
            - GOOS={{matrix}}
          mount-buildkite-agent: true
          propagate-environment: true
          run: goreleaser
          shell: false
          tty: true
          volumes:
            - "/tmp/cache/go-build:/tmp/cache/go-build"
            - "/tmp/cache/go-mod:/tmp/cache/go-mod"

  - block: ":package: Create a release?"
    prompt: "Fill out the tag to create for this release"
    branches:
      - 3.x
    blocked_state: passed
    fields:
      - key: release-tag
        text: Tag
        required: true
        hint: "Eg: v3.0.0-beta.rev2"

  # this tags the commit with the input from the previous block step and pushes it to github
  # that will trigger the buildkite-cli-release pipeline off the tag which will create a release in github
  - label: ":rocket: Pushing a tag to release"
    command: ".buildkite/tag.sh"
    branches:
      - 3.x
    env:
      AWS_REGION: us-east-1
    plugins:
      - aws-assume-role-with-web-identity:
          role-arn: arn:aws:iam::445615400570:role/pipeline-buildkite-buildkite-cli
      - aws-ssm#v1.0.0:
          parameters:
            GITHUB_TOKEN: /pipelines/buildkite/buildkite-cli/github-token
            GITHUB_USER: /pipelines/buildkite/buildkite-cli/github-user
